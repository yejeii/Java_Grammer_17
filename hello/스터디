
- 스터디 조 구성
  JAVA 프로젝트 추천 
  이상적인 기간 : 자바 종료 ~ React 시작 후 1/4 시점
  
  step1. 
  - 레이어가 있는 수준(MVC - DB) : S/W 아키텍처
    순수 자바로 만든 MVC 아키텍처의 자바 프로그램
    (HTML, JS, JSP, Servlet, DB 필요 X. 순수 자바로)
    HTML, JS(화면에 뿌리기) : View
                            
    JSP, Servlet(메뉴에 따른 처리) : Controller
    DB : Java의 자료구조
    
  step2.
  - 주제 선정
    도서관리(도서정보 관리, 회원정보 관리, 재고관리, 대출 처리, 구매 관리 ....)
      
    도서정보 관리 : 등록, 수정, 삭제, 조회(제목, 저자, 출판사, 분류코드 조회...)
      
    시간과 경험을 판단해 개발 목표를 세울 것
    
    주제 : 커피샵, 스터디카페, 버스예매, PC방 관리, 은행업무(ATM)
    -- 순수자바로 된 프로젝트(기능은 4가지는 있는)
    동원 : 커피샵 키오스크 (주문, 예약, 결제, 환불, 적립)
    형진 : PC방 관리(로그인, 시간 충전, 까이고, 음식 주문, 결제)
    스터디 카페(로그인, 자리 예약, 시간 연장, 사물함)
    은행업무 : 인출, 조회, 정리, 
    하고싶은 게시판 선정(적어도 기능은 4가지) 순수 자바 코드 서칭
    
    질문 수준이 낮아도 이해해기 
    
    
    
      
  - 목표
    각 한명이 관리 기능 구현
    안되면 두 명이 한 기능을 구현.. -> 작지만 완성도 있는 프로젝트 구현을 목표로 설정
      
    이후,
    리엑트, 스프링부트, JPA를 배운 후 선행 프로젝트 결과물을 새로운 웹 기술로 마이그레이션 유도!!
    
    
    
    
- 개발 시작시 생각해보기
  
  ex. 학원관리 서비스
  1. 학생리스트를 메모리에 두고 계속 사용할 것인가? : InMemory  (ex. Collections의 max/min)
  2. 학생리스트를 DB에 두고 계속 사용할 것인가? : OutMemory   (ex. DB sql의 max/min)
  3. 학생리스트를 InMemory + OutMemory 함께 사용할 것인가? -> 동기화는 어떻게 할 것인가
  
    -> 우린 어디에 맞춰서 개발할 것인가? -> 기술로 연결..
  
  4. 서비스별로 InMemory와 OutMemory를 사용이 필요한가?
     MSA(MicroServiceArchitecture)
  5. 모놀리식의 MSA를 할 것인가? 아님 클라우드 기반의 MSA를 할 것인가?
 
    -> 개발 덩치가 점점 커지기 때문에 코드 유지보수를 위해 모듈화, DDD, TDD, 애자일 방법 등의 개발론이 필요
 